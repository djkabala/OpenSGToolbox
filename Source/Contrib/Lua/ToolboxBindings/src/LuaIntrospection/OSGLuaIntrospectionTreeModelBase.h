/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class LuaIntrospectionTreeModel
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGLUAINTROSPECTIONTREEMODELBASE_H_
#define _OSGLUAINTROSPECTIONTREEMODELBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGContribLuaToolboxDef.h"

//#include "OSGBaseTypes.h"

#include "OSGAbstractTreeModel.h" // Parent

#include "OSGBaseFields.h"              // InternalRoot type
#include "OSGSysFields.h"               // ShowTable type

#include "OSGLuaIntrospectionTreeModelFields.h"

OSG_BEGIN_NAMESPACE

class LuaIntrospectionTreeModel;

//! \brief LuaIntrospectionTreeModel Base Class.

class OSG_CONTRIBLUATOOLBOX_DLLMAPPING LuaIntrospectionTreeModelBase : public AbstractTreeModel
{
  public:

    typedef AbstractTreeModel Inherited;
    typedef AbstractTreeModel ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(LuaIntrospectionTreeModel);
    
    

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        InternalRootFieldId = Inherited::NextFieldId,
        ShowTableFieldId = InternalRootFieldId + 1,
        ShowFunctionFieldId = ShowTableFieldId + 1,
        ShowNilFieldId = ShowFunctionFieldId + 1,
        ShowBooleanFieldId = ShowNilFieldId + 1,
        ShowNumberFieldId = ShowBooleanFieldId + 1,
        ShowStringFieldId = ShowNumberFieldId + 1,
        ShowThreadFieldId = ShowStringFieldId + 1,
        ShowUserDataFieldId = ShowThreadFieldId + 1,
        NextFieldId = ShowUserDataFieldId + 1
    };

    static const OSG::BitVector InternalRootFieldMask =
        (TypeTraits<BitVector>::One << InternalRootFieldId);
    static const OSG::BitVector ShowTableFieldMask =
        (TypeTraits<BitVector>::One << ShowTableFieldId);
    static const OSG::BitVector ShowFunctionFieldMask =
        (TypeTraits<BitVector>::One << ShowFunctionFieldId);
    static const OSG::BitVector ShowNilFieldMask =
        (TypeTraits<BitVector>::One << ShowNilFieldId);
    static const OSG::BitVector ShowBooleanFieldMask =
        (TypeTraits<BitVector>::One << ShowBooleanFieldId);
    static const OSG::BitVector ShowNumberFieldMask =
        (TypeTraits<BitVector>::One << ShowNumberFieldId);
    static const OSG::BitVector ShowStringFieldMask =
        (TypeTraits<BitVector>::One << ShowStringFieldId);
    static const OSG::BitVector ShowThreadFieldMask =
        (TypeTraits<BitVector>::One << ShowThreadFieldId);
    static const OSG::BitVector ShowUserDataFieldMask =
        (TypeTraits<BitVector>::One << ShowUserDataFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef MFString          MFInternalRootType;
    typedef SFBool            SFShowTableType;
    typedef SFBool            SFShowFunctionType;
    typedef SFBool            SFShowNilType;
    typedef SFBool            SFShowBooleanType;
    typedef SFBool            SFShowNumberType;
    typedef SFBool            SFShowStringType;
    typedef SFBool            SFShowThreadType;
    typedef SFBool            SFShowUserDataType;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


                  SFBool              *editSFShowTable      (void);
            const SFBool              *getSFShowTable       (void) const;

                  SFBool              *editSFShowFunction   (void);
            const SFBool              *getSFShowFunction    (void) const;

                  SFBool              *editSFShowNil        (void);
            const SFBool              *getSFShowNil         (void) const;

                  SFBool              *editSFShowBoolean    (void);
            const SFBool              *getSFShowBoolean     (void) const;

                  SFBool              *editSFShowNumber     (void);
            const SFBool              *getSFShowNumber      (void) const;

                  SFBool              *editSFShowString     (void);
            const SFBool              *getSFShowString      (void) const;

                  SFBool              *editSFShowThread     (void);
            const SFBool              *getSFShowThread      (void) const;

                  SFBool              *editSFShowUserData   (void);
            const SFBool              *getSFShowUserData    (void) const;


                  bool                &editShowTable      (void);
                  bool                 getShowTable       (void) const;

                  bool                &editShowFunction   (void);
                  bool                 getShowFunction    (void) const;

                  bool                &editShowNil        (void);
                  bool                 getShowNil         (void) const;

                  bool                &editShowBoolean    (void);
                  bool                 getShowBoolean     (void) const;

                  bool                &editShowNumber     (void);
                  bool                 getShowNumber      (void) const;

                  bool                &editShowString     (void);
                  bool                 getShowString      (void) const;

                  bool                &editShowThread     (void);
                  bool                 getShowThread      (void) const;

                  bool                &editShowUserData   (void);
                  bool                 getShowUserData    (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setShowTable      (const bool value);
            void setShowFunction   (const bool value);
            void setShowNil        (const bool value);
            void setShowBoolean    (const bool value);
            void setShowNumber     (const bool value);
            void setShowString     (const bool value);
            void setShowThread     (const bool value);
            void setShowUserData   (const bool value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  LuaIntrospectionTreeModelTransitPtr  create          (void);
    static  LuaIntrospectionTreeModel           *createEmpty     (void);

    static  LuaIntrospectionTreeModelTransitPtr  createLocal     (
                                               BitVector bFlags = FCLocal::All);

    static  LuaIntrospectionTreeModel            *createEmptyLocal(
                                              BitVector bFlags = FCLocal::All);

    static  LuaIntrospectionTreeModelTransitPtr  createDependent  (BitVector bFlags);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerTransitPtr shallowCopy     (void) const;
    virtual FieldContainerTransitPtr shallowCopyLocal(
                                       BitVector bFlags = FCLocal::All) const;
    virtual FieldContainerTransitPtr shallowCopyDependent(
                                                      BitVector bFlags) const;

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    MFString          _mfInternalRoot;
    SFBool            _sfShowTable;
    SFBool            _sfShowFunction;
    SFBool            _sfShowNil;
    SFBool            _sfShowBoolean;
    SFBool            _sfShowNumber;
    SFBool            _sfShowString;
    SFBool            _sfShowThread;
    SFBool            _sfShowUserData;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    LuaIntrospectionTreeModelBase(void);
    LuaIntrospectionTreeModelBase(const LuaIntrospectionTreeModelBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~LuaIntrospectionTreeModelBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

    GetFieldHandlePtr  getHandleInternalRoot    (void) const;
    EditFieldHandlePtr editHandleInternalRoot   (void);
    GetFieldHandlePtr  getHandleShowTable       (void) const;
    EditFieldHandlePtr editHandleShowTable      (void);
    GetFieldHandlePtr  getHandleShowFunction    (void) const;
    EditFieldHandlePtr editHandleShowFunction   (void);
    GetFieldHandlePtr  getHandleShowNil         (void) const;
    EditFieldHandlePtr editHandleShowNil        (void);
    GetFieldHandlePtr  getHandleShowBoolean     (void) const;
    EditFieldHandlePtr editHandleShowBoolean    (void);
    GetFieldHandlePtr  getHandleShowNumber      (void) const;
    EditFieldHandlePtr editHandleShowNumber     (void);
    GetFieldHandlePtr  getHandleShowString      (void) const;
    EditFieldHandlePtr editHandleShowString     (void);
    GetFieldHandlePtr  getHandleShowThread      (void) const;
    EditFieldHandlePtr editHandleShowThread     (void);
    GetFieldHandlePtr  getHandleShowUserData    (void) const;
    EditFieldHandlePtr editHandleShowUserData   (void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


                  MFString            *editMFInternalRoot   (void);
            const MFString            *getMFInternalRoot    (void) const;


                  std::string         &editInternalRoot   (const UInt32 index);
            const std::string         &getInternalRoot    (const UInt32 index) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      LuaIntrospectionTreeModelBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual FieldContainer *createAspectCopy(
                                    const FieldContainer *pRefAspect) const;
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const LuaIntrospectionTreeModelBase &source);
};

typedef LuaIntrospectionTreeModelBase *LuaIntrospectionTreeModelBaseP;

OSG_END_NAMESPACE

#endif /* _OSGLUAINTROSPECTIONTREEMODELBASE_H_ */
