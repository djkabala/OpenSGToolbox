/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class LuaIntrospectionTreeModel!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &LuaIntrospectionTreeModelBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 LuaIntrospectionTreeModelBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 LuaIntrospectionTreeModelBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the LuaIntrospectionTreeModel::_sfShowTable field.

inline
bool &LuaIntrospectionTreeModelBase::editShowTable(void)
{
    editSField(ShowTableFieldMask);

    return _sfShowTable.getValue();
}

//! Get the value of the LuaIntrospectionTreeModel::_sfShowTable field.
inline
      bool  LuaIntrospectionTreeModelBase::getShowTable(void) const
{
    return _sfShowTable.getValue();
}

//! Set the value of the LuaIntrospectionTreeModel::_sfShowTable field.
inline
void LuaIntrospectionTreeModelBase::setShowTable(const bool value)
{
    editSField(ShowTableFieldMask);

    _sfShowTable.setValue(value);
}
//! Get the value of the LuaIntrospectionTreeModel::_sfShowFunction field.

inline
bool &LuaIntrospectionTreeModelBase::editShowFunction(void)
{
    editSField(ShowFunctionFieldMask);

    return _sfShowFunction.getValue();
}

//! Get the value of the LuaIntrospectionTreeModel::_sfShowFunction field.
inline
      bool  LuaIntrospectionTreeModelBase::getShowFunction(void) const
{
    return _sfShowFunction.getValue();
}

//! Set the value of the LuaIntrospectionTreeModel::_sfShowFunction field.
inline
void LuaIntrospectionTreeModelBase::setShowFunction(const bool value)
{
    editSField(ShowFunctionFieldMask);

    _sfShowFunction.setValue(value);
}
//! Get the value of the LuaIntrospectionTreeModel::_sfShowNil field.

inline
bool &LuaIntrospectionTreeModelBase::editShowNil(void)
{
    editSField(ShowNilFieldMask);

    return _sfShowNil.getValue();
}

//! Get the value of the LuaIntrospectionTreeModel::_sfShowNil field.
inline
      bool  LuaIntrospectionTreeModelBase::getShowNil(void) const
{
    return _sfShowNil.getValue();
}

//! Set the value of the LuaIntrospectionTreeModel::_sfShowNil field.
inline
void LuaIntrospectionTreeModelBase::setShowNil(const bool value)
{
    editSField(ShowNilFieldMask);

    _sfShowNil.setValue(value);
}
//! Get the value of the LuaIntrospectionTreeModel::_sfShowBoolean field.

inline
bool &LuaIntrospectionTreeModelBase::editShowBoolean(void)
{
    editSField(ShowBooleanFieldMask);

    return _sfShowBoolean.getValue();
}

//! Get the value of the LuaIntrospectionTreeModel::_sfShowBoolean field.
inline
      bool  LuaIntrospectionTreeModelBase::getShowBoolean(void) const
{
    return _sfShowBoolean.getValue();
}

//! Set the value of the LuaIntrospectionTreeModel::_sfShowBoolean field.
inline
void LuaIntrospectionTreeModelBase::setShowBoolean(const bool value)
{
    editSField(ShowBooleanFieldMask);

    _sfShowBoolean.setValue(value);
}
//! Get the value of the LuaIntrospectionTreeModel::_sfShowNumber field.

inline
bool &LuaIntrospectionTreeModelBase::editShowNumber(void)
{
    editSField(ShowNumberFieldMask);

    return _sfShowNumber.getValue();
}

//! Get the value of the LuaIntrospectionTreeModel::_sfShowNumber field.
inline
      bool  LuaIntrospectionTreeModelBase::getShowNumber(void) const
{
    return _sfShowNumber.getValue();
}

//! Set the value of the LuaIntrospectionTreeModel::_sfShowNumber field.
inline
void LuaIntrospectionTreeModelBase::setShowNumber(const bool value)
{
    editSField(ShowNumberFieldMask);

    _sfShowNumber.setValue(value);
}
//! Get the value of the LuaIntrospectionTreeModel::_sfShowString field.

inline
bool &LuaIntrospectionTreeModelBase::editShowString(void)
{
    editSField(ShowStringFieldMask);

    return _sfShowString.getValue();
}

//! Get the value of the LuaIntrospectionTreeModel::_sfShowString field.
inline
      bool  LuaIntrospectionTreeModelBase::getShowString(void) const
{
    return _sfShowString.getValue();
}

//! Set the value of the LuaIntrospectionTreeModel::_sfShowString field.
inline
void LuaIntrospectionTreeModelBase::setShowString(const bool value)
{
    editSField(ShowStringFieldMask);

    _sfShowString.setValue(value);
}
//! Get the value of the LuaIntrospectionTreeModel::_sfShowThread field.

inline
bool &LuaIntrospectionTreeModelBase::editShowThread(void)
{
    editSField(ShowThreadFieldMask);

    return _sfShowThread.getValue();
}

//! Get the value of the LuaIntrospectionTreeModel::_sfShowThread field.
inline
      bool  LuaIntrospectionTreeModelBase::getShowThread(void) const
{
    return _sfShowThread.getValue();
}

//! Set the value of the LuaIntrospectionTreeModel::_sfShowThread field.
inline
void LuaIntrospectionTreeModelBase::setShowThread(const bool value)
{
    editSField(ShowThreadFieldMask);

    _sfShowThread.setValue(value);
}
//! Get the value of the LuaIntrospectionTreeModel::_sfShowUserData field.

inline
bool &LuaIntrospectionTreeModelBase::editShowUserData(void)
{
    editSField(ShowUserDataFieldMask);

    return _sfShowUserData.getValue();
}

//! Get the value of the LuaIntrospectionTreeModel::_sfShowUserData field.
inline
      bool  LuaIntrospectionTreeModelBase::getShowUserData(void) const
{
    return _sfShowUserData.getValue();
}

//! Set the value of the LuaIntrospectionTreeModel::_sfShowUserData field.
inline
void LuaIntrospectionTreeModelBase::setShowUserData(const bool value)
{
    editSField(ShowUserDataFieldMask);

    _sfShowUserData.setValue(value);
}

//! Get the value of the \a index element the LuaIntrospectionTreeModel::_mfInternalRoot field.
inline
const std::string &LuaIntrospectionTreeModelBase::getInternalRoot(const UInt32 index) const
{
    return _mfInternalRoot[index];
}

inline
std::string &LuaIntrospectionTreeModelBase::editInternalRoot(const UInt32 index)
{
    editMField(InternalRootFieldMask, _mfInternalRoot);

    return _mfInternalRoot[index];
}



#ifdef OSG_MT_CPTR_ASPECT
inline
void LuaIntrospectionTreeModelBase::execSync (      LuaIntrospectionTreeModelBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (InternalRootFieldMask & whichField))
        _mfInternalRoot.syncWith(pFrom->_mfInternalRoot,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (ShowTableFieldMask & whichField))
        _sfShowTable.syncWith(pFrom->_sfShowTable);

    if(FieldBits::NoField != (ShowFunctionFieldMask & whichField))
        _sfShowFunction.syncWith(pFrom->_sfShowFunction);

    if(FieldBits::NoField != (ShowNilFieldMask & whichField))
        _sfShowNil.syncWith(pFrom->_sfShowNil);

    if(FieldBits::NoField != (ShowBooleanFieldMask & whichField))
        _sfShowBoolean.syncWith(pFrom->_sfShowBoolean);

    if(FieldBits::NoField != (ShowNumberFieldMask & whichField))
        _sfShowNumber.syncWith(pFrom->_sfShowNumber);

    if(FieldBits::NoField != (ShowStringFieldMask & whichField))
        _sfShowString.syncWith(pFrom->_sfShowString);

    if(FieldBits::NoField != (ShowThreadFieldMask & whichField))
        _sfShowThread.syncWith(pFrom->_sfShowThread);

    if(FieldBits::NoField != (ShowUserDataFieldMask & whichField))
        _sfShowUserData.syncWith(pFrom->_sfShowUserData);
}
#endif


inline
const Char8 *LuaIntrospectionTreeModelBase::getClassname(void)
{
    return "LuaIntrospectionTreeModel";
}
OSG_GEN_CONTAINERPTR(LuaIntrospectionTreeModel);

OSG_END_NAMESPACE

