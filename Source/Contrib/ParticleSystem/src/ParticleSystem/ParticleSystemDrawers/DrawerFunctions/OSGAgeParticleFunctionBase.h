/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact:  David Kabala, Dan Guilliams (djkabala/dan.guilliams@gmail.com)*
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class AgeParticleFunction
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGAGEPARTICLEFUNCTIONBASE_H_
#define _OSGAGEPARTICLEFUNCTIONBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGContribParticleSystemDef.h"

//#include "OSGBaseTypes.h"

#include "OSGParticleFunction.h" // Parent

#include "OSGSysFields.h"               // SequenceTime type

#include "OSGAgeParticleFunctionFields.h"

OSG_BEGIN_NAMESPACE

class AgeParticleFunction;

//! \brief AgeParticleFunction Base Class.

class OSG_CONTRIBPARTICLESYSTEM_DLLMAPPING AgeParticleFunctionBase : public ParticleFunction
{
  public:

    typedef ParticleFunction Inherited;
    typedef ParticleFunction ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(AgeParticleFunction);

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        SequenceTimeFieldId = Inherited::NextFieldId,
        SequenceOrderFieldId = SequenceTimeFieldId + 1,
        CustomSequenceFieldId = SequenceOrderFieldId + 1,
        NextFieldId = CustomSequenceFieldId + 1
    };

    static const OSG::BitVector SequenceTimeFieldMask =
        (TypeTraits<BitVector>::One << SequenceTimeFieldId);
    static const OSG::BitVector SequenceOrderFieldMask =
        (TypeTraits<BitVector>::One << SequenceOrderFieldId);
    static const OSG::BitVector CustomSequenceFieldMask =
        (TypeTraits<BitVector>::One << CustomSequenceFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef SFReal32          SFSequenceTimeType;
    typedef SFInt32           SFSequenceOrderType;
    typedef MFUInt32          MFCustomSequenceType;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


                  SFReal32            *editSFSequenceTime   (void);
            const SFReal32            *getSFSequenceTime    (void) const;

                  SFInt32             *editSFSequenceOrder  (void);
            const SFInt32             *getSFSequenceOrder   (void) const;

                  MFUInt32            *editMFCustomSequence (void);
            const MFUInt32            *getMFCustomSequence  (void) const;


                  Real32              &editSequenceTime   (void);
                  Real32               getSequenceTime    (void) const;

                  Int32               &editSequenceOrder  (void);
                  Int32                getSequenceOrder   (void) const;

                  UInt32              &editCustomSequence (const UInt32 index);
                  UInt32               getCustomSequence  (const UInt32 index) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setSequenceTime   (const Real32 value);
            void setSequenceOrder  (const Int32 value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  AgeParticleFunctionTransitPtr  create          (void);
    static  AgeParticleFunction           *createEmpty     (void);

    static  AgeParticleFunctionTransitPtr  createLocal     (
                                               BitVector bFlags = FCLocal::All);

    static  AgeParticleFunction            *createEmptyLocal(
                                              BitVector bFlags = FCLocal::All);

    static  AgeParticleFunctionTransitPtr  createDependent  (BitVector bFlags);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerTransitPtr shallowCopy     (void) const;
    virtual FieldContainerTransitPtr shallowCopyLocal(
                                       BitVector bFlags = FCLocal::All) const;
    virtual FieldContainerTransitPtr shallowCopyDependent(
                                                      BitVector bFlags) const;

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFReal32          _sfSequenceTime;
    SFInt32           _sfSequenceOrder;
    MFUInt32          _mfCustomSequence;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    AgeParticleFunctionBase(void);
    AgeParticleFunctionBase(const AgeParticleFunctionBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~AgeParticleFunctionBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

    GetFieldHandlePtr  getHandleSequenceTime    (void) const;
    EditFieldHandlePtr editHandleSequenceTime   (void);
    GetFieldHandlePtr  getHandleSequenceOrder   (void) const;
    EditFieldHandlePtr editHandleSequenceOrder  (void);
    GetFieldHandlePtr  getHandleCustomSequence  (void) const;
    EditFieldHandlePtr editHandleCustomSequence (void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      AgeParticleFunctionBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual FieldContainer *createAspectCopy(
                                    const FieldContainer *pRefAspect) const;
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const AgeParticleFunctionBase &source);
};

typedef AgeParticleFunctionBase *AgeParticleFunctionBaseP;

OSG_END_NAMESPACE

#endif /* _OSGAGEPARTICLEFUNCTIONBASE_H_ */
