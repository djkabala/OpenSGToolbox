/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala, Dan Guilliams (djkabala/dan.guilliams@gmail.com)*
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class QuadSequenceParticleSystemDrawer!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &QuadSequenceParticleSystemDrawerBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 QuadSequenceParticleSystemDrawerBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 QuadSequenceParticleSystemDrawerBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the QuadSequenceParticleSystemDrawer::_sfSequenceDimensions field.

inline
Vec2b &QuadSequenceParticleSystemDrawerBase::editSequenceDimensions(void)
{
    editSField(SequenceDimensionsFieldMask);

    return _sfSequenceDimensions.getValue();
}

//! Get the value of the QuadSequenceParticleSystemDrawer::_sfSequenceDimensions field.
inline
const Vec2b &QuadSequenceParticleSystemDrawerBase::getSequenceDimensions(void) const
{
    return _sfSequenceDimensions.getValue();
}

//! Set the value of the QuadSequenceParticleSystemDrawer::_sfSequenceDimensions field.
inline
void QuadSequenceParticleSystemDrawerBase::setSequenceDimensions(const Vec2b &value)
{
    editSField(SequenceDimensionsFieldMask);

    _sfSequenceDimensions.setValue(value);
}
//! Get the value of the QuadSequenceParticleSystemDrawer::_sfBorderOffsets field.

inline
Vec2b &QuadSequenceParticleSystemDrawerBase::editBorderOffsets(void)
{
    editSField(BorderOffsetsFieldMask);

    return _sfBorderOffsets.getValue();
}

//! Get the value of the QuadSequenceParticleSystemDrawer::_sfBorderOffsets field.
inline
const Vec2b &QuadSequenceParticleSystemDrawerBase::getBorderOffsets(void) const
{
    return _sfBorderOffsets.getValue();
}

//! Set the value of the QuadSequenceParticleSystemDrawer::_sfBorderOffsets field.
inline
void QuadSequenceParticleSystemDrawerBase::setBorderOffsets(const Vec2b &value)
{
    editSField(BorderOffsetsFieldMask);

    _sfBorderOffsets.setValue(value);
}

//! Get the value of the QuadSequenceParticleSystemDrawer::_sfSequenceFunction field.
inline
ParticleFunction * QuadSequenceParticleSystemDrawerBase::getSequenceFunction(void) const
{
    return _sfSequenceFunction.getValue();
}

//! Set the value of the QuadSequenceParticleSystemDrawer::_sfSequenceFunction field.
inline
void QuadSequenceParticleSystemDrawerBase::setSequenceFunction(ParticleFunction * const value)
{
    editSField(SequenceFunctionFieldMask);

    _sfSequenceFunction.setValue(value);
}
//! Get the value of the QuadSequenceParticleSystemDrawer::_sfImageDimensions field.

inline
Vec2us &QuadSequenceParticleSystemDrawerBase::editImageDimensions(void)
{
    editSField(ImageDimensionsFieldMask);

    return _sfImageDimensions.getValue();
}

//! Get the value of the QuadSequenceParticleSystemDrawer::_sfImageDimensions field.
inline
const Vec2us &QuadSequenceParticleSystemDrawerBase::getImageDimensions(void) const
{
    return _sfImageDimensions.getValue();
}

//! Set the value of the QuadSequenceParticleSystemDrawer::_sfImageDimensions field.
inline
void QuadSequenceParticleSystemDrawerBase::setImageDimensions(const Vec2us &value)
{
    editSField(ImageDimensionsFieldMask);

    _sfImageDimensions.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void QuadSequenceParticleSystemDrawerBase::execSync (      QuadSequenceParticleSystemDrawerBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (SequenceDimensionsFieldMask & whichField))
        _sfSequenceDimensions.syncWith(pFrom->_sfSequenceDimensions);

    if(FieldBits::NoField != (BorderOffsetsFieldMask & whichField))
        _sfBorderOffsets.syncWith(pFrom->_sfBorderOffsets);

    if(FieldBits::NoField != (SequenceFunctionFieldMask & whichField))
        _sfSequenceFunction.syncWith(pFrom->_sfSequenceFunction);

    if(FieldBits::NoField != (ImageDimensionsFieldMask & whichField))
        _sfImageDimensions.syncWith(pFrom->_sfImageDimensions);
}
#endif


inline
const Char8 *QuadSequenceParticleSystemDrawerBase::getClassname(void)
{
    return "QuadSequenceParticleSystemDrawer";
}
OSG_GEN_CONTAINERPTR(QuadSequenceParticleSystemDrawer);

OSG_END_NAMESPACE

