/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com),  Behboud Kalantary         *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class PhysicsPRJoint!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &PhysicsPRJointBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 PhysicsPRJointBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 PhysicsPRJointBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the PhysicsPRJoint::_sfAnchor field.

inline
Vec3f &PhysicsPRJointBase::editAnchor(void)
{
    editSField(AnchorFieldMask);

    return _sfAnchor.getValue();
}

//! Get the value of the PhysicsPRJoint::_sfAnchor field.
inline
const Vec3f &PhysicsPRJointBase::getAnchor(void) const
{
    return _sfAnchor.getValue();
}

//! Set the value of the PhysicsPRJoint::_sfAnchor field.
inline
void PhysicsPRJointBase::setAnchor(const Vec3f &value)
{
    editSField(AnchorFieldMask);

    _sfAnchor.setValue(value);
}
//! Get the value of the PhysicsPRJoint::_sfAxis1 field.

inline
Vec3f &PhysicsPRJointBase::editAxis1(void)
{
    editSField(Axis1FieldMask);

    return _sfAxis1.getValue();
}

//! Get the value of the PhysicsPRJoint::_sfAxis1 field.
inline
const Vec3f &PhysicsPRJointBase::getAxis1(void) const
{
    return _sfAxis1.getValue();
}

//! Set the value of the PhysicsPRJoint::_sfAxis1 field.
inline
void PhysicsPRJointBase::setAxis1(const Vec3f &value)
{
    editSField(Axis1FieldMask);

    _sfAxis1.setValue(value);
}
//! Get the value of the PhysicsPRJoint::_sfAxis2 field.

inline
Vec3f &PhysicsPRJointBase::editAxis2(void)
{
    editSField(Axis2FieldMask);

    return _sfAxis2.getValue();
}

//! Get the value of the PhysicsPRJoint::_sfAxis2 field.
inline
const Vec3f &PhysicsPRJointBase::getAxis2(void) const
{
    return _sfAxis2.getValue();
}

//! Set the value of the PhysicsPRJoint::_sfAxis2 field.
inline
void PhysicsPRJointBase::setAxis2(const Vec3f &value)
{
    editSField(Axis2FieldMask);

    _sfAxis2.setValue(value);
}
//! Get the value of the PhysicsPRJoint::_sfHiStop field.

inline
Real32 &PhysicsPRJointBase::editHiStop(void)
{
    editSField(HiStopFieldMask);

    return _sfHiStop.getValue();
}

//! Get the value of the PhysicsPRJoint::_sfHiStop field.
inline
      Real32  PhysicsPRJointBase::getHiStop(void) const
{
    return _sfHiStop.getValue();
}

//! Set the value of the PhysicsPRJoint::_sfHiStop field.
inline
void PhysicsPRJointBase::setHiStop(const Real32 value)
{
    editSField(HiStopFieldMask);

    _sfHiStop.setValue(value);
}
//! Get the value of the PhysicsPRJoint::_sfLoStop field.

inline
Real32 &PhysicsPRJointBase::editLoStop(void)
{
    editSField(LoStopFieldMask);

    return _sfLoStop.getValue();
}

//! Get the value of the PhysicsPRJoint::_sfLoStop field.
inline
      Real32  PhysicsPRJointBase::getLoStop(void) const
{
    return _sfLoStop.getValue();
}

//! Set the value of the PhysicsPRJoint::_sfLoStop field.
inline
void PhysicsPRJointBase::setLoStop(const Real32 value)
{
    editSField(LoStopFieldMask);

    _sfLoStop.setValue(value);
}
//! Get the value of the PhysicsPRJoint::_sfBounce field.

inline
Real32 &PhysicsPRJointBase::editBounce(void)
{
    editSField(BounceFieldMask);

    return _sfBounce.getValue();
}

//! Get the value of the PhysicsPRJoint::_sfBounce field.
inline
      Real32  PhysicsPRJointBase::getBounce(void) const
{
    return _sfBounce.getValue();
}

//! Set the value of the PhysicsPRJoint::_sfBounce field.
inline
void PhysicsPRJointBase::setBounce(const Real32 value)
{
    editSField(BounceFieldMask);

    _sfBounce.setValue(value);
}
//! Get the value of the PhysicsPRJoint::_sfCFM field.

inline
Real32 &PhysicsPRJointBase::editCFM(void)
{
    editSField(CFMFieldMask);

    return _sfCFM.getValue();
}

//! Get the value of the PhysicsPRJoint::_sfCFM field.
inline
      Real32  PhysicsPRJointBase::getCFM(void) const
{
    return _sfCFM.getValue();
}

//! Set the value of the PhysicsPRJoint::_sfCFM field.
inline
void PhysicsPRJointBase::setCFM(const Real32 value)
{
    editSField(CFMFieldMask);

    _sfCFM.setValue(value);
}
//! Get the value of the PhysicsPRJoint::_sfStopERP field.

inline
Real32 &PhysicsPRJointBase::editStopERP(void)
{
    editSField(StopERPFieldMask);

    return _sfStopERP.getValue();
}

//! Get the value of the PhysicsPRJoint::_sfStopERP field.
inline
      Real32  PhysicsPRJointBase::getStopERP(void) const
{
    return _sfStopERP.getValue();
}

//! Set the value of the PhysicsPRJoint::_sfStopERP field.
inline
void PhysicsPRJointBase::setStopERP(const Real32 value)
{
    editSField(StopERPFieldMask);

    _sfStopERP.setValue(value);
}
//! Get the value of the PhysicsPRJoint::_sfStopCFM field.

inline
Real32 &PhysicsPRJointBase::editStopCFM(void)
{
    editSField(StopCFMFieldMask);

    return _sfStopCFM.getValue();
}

//! Get the value of the PhysicsPRJoint::_sfStopCFM field.
inline
      Real32  PhysicsPRJointBase::getStopCFM(void) const
{
    return _sfStopCFM.getValue();
}

//! Set the value of the PhysicsPRJoint::_sfStopCFM field.
inline
void PhysicsPRJointBase::setStopCFM(const Real32 value)
{
    editSField(StopCFMFieldMask);

    _sfStopCFM.setValue(value);
}
//! Get the value of the PhysicsPRJoint::_sfHiStop2 field.

inline
Real32 &PhysicsPRJointBase::editHiStop2(void)
{
    editSField(HiStop2FieldMask);

    return _sfHiStop2.getValue();
}

//! Get the value of the PhysicsPRJoint::_sfHiStop2 field.
inline
      Real32  PhysicsPRJointBase::getHiStop2(void) const
{
    return _sfHiStop2.getValue();
}

//! Set the value of the PhysicsPRJoint::_sfHiStop2 field.
inline
void PhysicsPRJointBase::setHiStop2(const Real32 value)
{
    editSField(HiStop2FieldMask);

    _sfHiStop2.setValue(value);
}
//! Get the value of the PhysicsPRJoint::_sfLoStop2 field.

inline
Real32 &PhysicsPRJointBase::editLoStop2(void)
{
    editSField(LoStop2FieldMask);

    return _sfLoStop2.getValue();
}

//! Get the value of the PhysicsPRJoint::_sfLoStop2 field.
inline
      Real32  PhysicsPRJointBase::getLoStop2(void) const
{
    return _sfLoStop2.getValue();
}

//! Set the value of the PhysicsPRJoint::_sfLoStop2 field.
inline
void PhysicsPRJointBase::setLoStop2(const Real32 value)
{
    editSField(LoStop2FieldMask);

    _sfLoStop2.setValue(value);
}
//! Get the value of the PhysicsPRJoint::_sfBounce2 field.

inline
Real32 &PhysicsPRJointBase::editBounce2(void)
{
    editSField(Bounce2FieldMask);

    return _sfBounce2.getValue();
}

//! Get the value of the PhysicsPRJoint::_sfBounce2 field.
inline
      Real32  PhysicsPRJointBase::getBounce2(void) const
{
    return _sfBounce2.getValue();
}

//! Set the value of the PhysicsPRJoint::_sfBounce2 field.
inline
void PhysicsPRJointBase::setBounce2(const Real32 value)
{
    editSField(Bounce2FieldMask);

    _sfBounce2.setValue(value);
}
//! Get the value of the PhysicsPRJoint::_sfCFM2 field.

inline
Real32 &PhysicsPRJointBase::editCFM2(void)
{
    editSField(CFM2FieldMask);

    return _sfCFM2.getValue();
}

//! Get the value of the PhysicsPRJoint::_sfCFM2 field.
inline
      Real32  PhysicsPRJointBase::getCFM2(void) const
{
    return _sfCFM2.getValue();
}

//! Set the value of the PhysicsPRJoint::_sfCFM2 field.
inline
void PhysicsPRJointBase::setCFM2(const Real32 value)
{
    editSField(CFM2FieldMask);

    _sfCFM2.setValue(value);
}
//! Get the value of the PhysicsPRJoint::_sfStopERP2 field.

inline
Real32 &PhysicsPRJointBase::editStopERP2(void)
{
    editSField(StopERP2FieldMask);

    return _sfStopERP2.getValue();
}

//! Get the value of the PhysicsPRJoint::_sfStopERP2 field.
inline
      Real32  PhysicsPRJointBase::getStopERP2(void) const
{
    return _sfStopERP2.getValue();
}

//! Set the value of the PhysicsPRJoint::_sfStopERP2 field.
inline
void PhysicsPRJointBase::setStopERP2(const Real32 value)
{
    editSField(StopERP2FieldMask);

    _sfStopERP2.setValue(value);
}
//! Get the value of the PhysicsPRJoint::_sfStopCFM2 field.

inline
Real32 &PhysicsPRJointBase::editStopCFM2(void)
{
    editSField(StopCFM2FieldMask);

    return _sfStopCFM2.getValue();
}

//! Get the value of the PhysicsPRJoint::_sfStopCFM2 field.
inline
      Real32  PhysicsPRJointBase::getStopCFM2(void) const
{
    return _sfStopCFM2.getValue();
}

//! Set the value of the PhysicsPRJoint::_sfStopCFM2 field.
inline
void PhysicsPRJointBase::setStopCFM2(const Real32 value)
{
    editSField(StopCFM2FieldMask);

    _sfStopCFM2.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void PhysicsPRJointBase::execSync (      PhysicsPRJointBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (AnchorFieldMask & whichField))
        _sfAnchor.syncWith(pFrom->_sfAnchor);

    if(FieldBits::NoField != (Axis1FieldMask & whichField))
        _sfAxis1.syncWith(pFrom->_sfAxis1);

    if(FieldBits::NoField != (Axis2FieldMask & whichField))
        _sfAxis2.syncWith(pFrom->_sfAxis2);

    if(FieldBits::NoField != (HiStopFieldMask & whichField))
        _sfHiStop.syncWith(pFrom->_sfHiStop);

    if(FieldBits::NoField != (LoStopFieldMask & whichField))
        _sfLoStop.syncWith(pFrom->_sfLoStop);

    if(FieldBits::NoField != (BounceFieldMask & whichField))
        _sfBounce.syncWith(pFrom->_sfBounce);

    if(FieldBits::NoField != (CFMFieldMask & whichField))
        _sfCFM.syncWith(pFrom->_sfCFM);

    if(FieldBits::NoField != (StopERPFieldMask & whichField))
        _sfStopERP.syncWith(pFrom->_sfStopERP);

    if(FieldBits::NoField != (StopCFMFieldMask & whichField))
        _sfStopCFM.syncWith(pFrom->_sfStopCFM);

    if(FieldBits::NoField != (HiStop2FieldMask & whichField))
        _sfHiStop2.syncWith(pFrom->_sfHiStop2);

    if(FieldBits::NoField != (LoStop2FieldMask & whichField))
        _sfLoStop2.syncWith(pFrom->_sfLoStop2);

    if(FieldBits::NoField != (Bounce2FieldMask & whichField))
        _sfBounce2.syncWith(pFrom->_sfBounce2);

    if(FieldBits::NoField != (CFM2FieldMask & whichField))
        _sfCFM2.syncWith(pFrom->_sfCFM2);

    if(FieldBits::NoField != (StopERP2FieldMask & whichField))
        _sfStopERP2.syncWith(pFrom->_sfStopERP2);

    if(FieldBits::NoField != (StopCFM2FieldMask & whichField))
        _sfStopCFM2.syncWith(pFrom->_sfStopCFM2);
}
#endif


inline
const Char8 *PhysicsPRJointBase::getClassname(void)
{
    return "PhysicsPRJoint";
}
OSG_GEN_CONTAINERPTR(PhysicsPRJoint);

OSG_END_NAMESPACE

