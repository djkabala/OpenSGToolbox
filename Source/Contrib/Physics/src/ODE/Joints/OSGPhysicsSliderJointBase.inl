/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com),  Behboud Kalantary         *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class PhysicsSliderJoint!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &PhysicsSliderJointBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 PhysicsSliderJointBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 PhysicsSliderJointBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the PhysicsSliderJoint::_sfAxis field.

inline
Vec3f &PhysicsSliderJointBase::editAxis(void)
{
    editSField(AxisFieldMask);

    return _sfAxis.getValue();
}

//! Get the value of the PhysicsSliderJoint::_sfAxis field.
inline
const Vec3f &PhysicsSliderJointBase::getAxis(void) const
{
    return _sfAxis.getValue();
}

//! Set the value of the PhysicsSliderJoint::_sfAxis field.
inline
void PhysicsSliderJointBase::setAxis(const Vec3f &value)
{
    editSField(AxisFieldMask);

    _sfAxis.setValue(value);
}
//! Get the value of the PhysicsSliderJoint::_sfHiStop field.

inline
Real32 &PhysicsSliderJointBase::editHiStop(void)
{
    editSField(HiStopFieldMask);

    return _sfHiStop.getValue();
}

//! Get the value of the PhysicsSliderJoint::_sfHiStop field.
inline
      Real32  PhysicsSliderJointBase::getHiStop(void) const
{
    return _sfHiStop.getValue();
}

//! Set the value of the PhysicsSliderJoint::_sfHiStop field.
inline
void PhysicsSliderJointBase::setHiStop(const Real32 value)
{
    editSField(HiStopFieldMask);

    _sfHiStop.setValue(value);
}
//! Get the value of the PhysicsSliderJoint::_sfLoStop field.

inline
Real32 &PhysicsSliderJointBase::editLoStop(void)
{
    editSField(LoStopFieldMask);

    return _sfLoStop.getValue();
}

//! Get the value of the PhysicsSliderJoint::_sfLoStop field.
inline
      Real32  PhysicsSliderJointBase::getLoStop(void) const
{
    return _sfLoStop.getValue();
}

//! Set the value of the PhysicsSliderJoint::_sfLoStop field.
inline
void PhysicsSliderJointBase::setLoStop(const Real32 value)
{
    editSField(LoStopFieldMask);

    _sfLoStop.setValue(value);
}
//! Get the value of the PhysicsSliderJoint::_sfBounce field.

inline
Real32 &PhysicsSliderJointBase::editBounce(void)
{
    editSField(BounceFieldMask);

    return _sfBounce.getValue();
}

//! Get the value of the PhysicsSliderJoint::_sfBounce field.
inline
      Real32  PhysicsSliderJointBase::getBounce(void) const
{
    return _sfBounce.getValue();
}

//! Set the value of the PhysicsSliderJoint::_sfBounce field.
inline
void PhysicsSliderJointBase::setBounce(const Real32 value)
{
    editSField(BounceFieldMask);

    _sfBounce.setValue(value);
}
//! Get the value of the PhysicsSliderJoint::_sfCFM field.

inline
Real32 &PhysicsSliderJointBase::editCFM(void)
{
    editSField(CFMFieldMask);

    return _sfCFM.getValue();
}

//! Get the value of the PhysicsSliderJoint::_sfCFM field.
inline
      Real32  PhysicsSliderJointBase::getCFM(void) const
{
    return _sfCFM.getValue();
}

//! Set the value of the PhysicsSliderJoint::_sfCFM field.
inline
void PhysicsSliderJointBase::setCFM(const Real32 value)
{
    editSField(CFMFieldMask);

    _sfCFM.setValue(value);
}
//! Get the value of the PhysicsSliderJoint::_sfStopERP field.

inline
Real32 &PhysicsSliderJointBase::editStopERP(void)
{
    editSField(StopERPFieldMask);

    return _sfStopERP.getValue();
}

//! Get the value of the PhysicsSliderJoint::_sfStopERP field.
inline
      Real32  PhysicsSliderJointBase::getStopERP(void) const
{
    return _sfStopERP.getValue();
}

//! Set the value of the PhysicsSliderJoint::_sfStopERP field.
inline
void PhysicsSliderJointBase::setStopERP(const Real32 value)
{
    editSField(StopERPFieldMask);

    _sfStopERP.setValue(value);
}
//! Get the value of the PhysicsSliderJoint::_sfStopCFM field.

inline
Real32 &PhysicsSliderJointBase::editStopCFM(void)
{
    editSField(StopCFMFieldMask);

    return _sfStopCFM.getValue();
}

//! Get the value of the PhysicsSliderJoint::_sfStopCFM field.
inline
      Real32  PhysicsSliderJointBase::getStopCFM(void) const
{
    return _sfStopCFM.getValue();
}

//! Set the value of the PhysicsSliderJoint::_sfStopCFM field.
inline
void PhysicsSliderJointBase::setStopCFM(const Real32 value)
{
    editSField(StopCFMFieldMask);

    _sfStopCFM.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void PhysicsSliderJointBase::execSync (      PhysicsSliderJointBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (AxisFieldMask & whichField))
        _sfAxis.syncWith(pFrom->_sfAxis);

    if(FieldBits::NoField != (HiStopFieldMask & whichField))
        _sfHiStop.syncWith(pFrom->_sfHiStop);

    if(FieldBits::NoField != (LoStopFieldMask & whichField))
        _sfLoStop.syncWith(pFrom->_sfLoStop);

    if(FieldBits::NoField != (BounceFieldMask & whichField))
        _sfBounce.syncWith(pFrom->_sfBounce);

    if(FieldBits::NoField != (CFMFieldMask & whichField))
        _sfCFM.syncWith(pFrom->_sfCFM);

    if(FieldBits::NoField != (StopERPFieldMask & whichField))
        _sfStopERP.syncWith(pFrom->_sfStopERP);

    if(FieldBits::NoField != (StopCFMFieldMask & whichField))
        _sfStopCFM.syncWith(pFrom->_sfStopCFM);
}
#endif


inline
const Char8 *PhysicsSliderJointBase::getClassname(void)
{
    return "PhysicsSliderJoint";
}
OSG_GEN_CONTAINERPTR(PhysicsSliderJoint);

OSG_END_NAMESPACE

